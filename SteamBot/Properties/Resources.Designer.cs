//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SteamBot.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "15.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SteamBot.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;div id=&quot;chartContainer&quot; style=&quot;height: 370px; max-width: 920px; margin: 0px auto;&quot;&gt;&lt;/div&gt;.
        /// </summary>
        internal static string chartdiv {
            get {
                return ResourceManager.GetString("chartdiv", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to async function fetchAsync (url) {
        ///    let response = await fetch(url);
        ///    let data = await response.json();
        ///    return data;
        ///}
        ///
        ///window.onload = function () {
        ///
        ///var dps = [];
        ///var chart = new CanvasJS.Chart(&quot;chartContainer&quot;, {
        ///    title :{
        ///        text: &quot;Dynamic Data&quot;
        ///    },
        ///    axisY: {
        ///        includeZero: false
        ///    },      
        ///    data: [{
        ///        type: &quot;line&quot;,
        ///        dataPoints: dps
        ///    }]
        ///});
        ///
        ///var xVal = 0;
        ///var updateInterval = 2000;
        ///var dataLength = 20;
        ///
        ///var updateChart = function() {
        ///                     [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string chartUpdateScript {
            get {
                return ResourceManager.GetString("chartUpdateScript", resourceCulture);
            }
        }
    }
}
